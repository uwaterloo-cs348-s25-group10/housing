CREATE INDEX
CREATE INDEX
CREATE INDEX
CREATE INDEX
CREATE INDEX
CREATE INDEX
CREATE INDEX
CREATE INDEX
CREATE INDEX
CREATE INDEX
CREATE INDEX
== Enabling psql timing ==
Timing is on.
== FEATURE 1a EXPLORE HOUSING PRICES: Average price of ON condos in 2020 by region (Limit 10)==
                                                                               QUERY PLAN                                                                               
------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=63.49..63.51 rows=1 width=108) (actual time=0.323..0.328 rows=9 loops=1)
   Buffers: shared hit=168 read=10
   ->  GroupAggregate  (cost=63.49..63.51 rows=1 width=108) (actual time=0.322..0.326 rows=9 loops=1)
         Group Key: r.name
         Buffers: shared hit=168 read=10
         ->  Sort  (cost=63.49..63.49 rows=1 width=108) (actual time=0.318..0.320 rows=9 loops=1)
               Sort Key: r.name
               Sort Method: quicksort  Memory: 25kB
               Buffers: shared hit=168 read=10
               ->  Nested Loop  (cost=30.31..63.48 rows=1 width=108) (actual time=0.258..0.310 rows=9 loops=1)
                     Buffers: shared hit=168 read=10
                     ->  Hash Join  (cost=30.03..56.15 rows=1 width=100) (actual time=0.208..0.254 rows=60 loops=1)
                           Hash Cond: (p.region_id = r.region_id)
                           Buffers: shared hit=42 read=7
                           ->  Bitmap Heap Scan on property p  (cost=4.44..30.51 rows=20 width=40) (actual time=0.054..0.108 rows=298 loops=1)
                                 Recheck Cond: ((type)::text = 'Condo'::text)
                                 Heap Blocks: exact=26
                                 Buffers: shared hit=26 read=3
                                 ->  Bitmap Index Scan on idx_property_type_region  (cost=0.00..4.43 rows=20 width=0) (actual time=0.047..0.047 rows=298 loops=1)
                                       Index Cond: ((type)::text = 'Condo'::text)
                                       Buffers: shared read=3
                           ->  Hash  (cost=25.39..25.39 rows=16 width=68) (actual time=0.115..0.115 rows=353 loops=1)
                                 Buckets: 1024  Batches: 1  Memory Usage: 26kB
                                 Buffers: shared hit=16 read=4
                                 ->  Bitmap Heap Scan on region r  (cost=4.40..25.39 rows=16 width=68) (actual time=0.034..0.077 rows=353 loops=1)
                                       Recheck Cond: ((province)::text = 'ON'::text)
                                       Heap Blocks: exact=16
                                       Buffers: shared hit=16 read=4
                                       ->  Bitmap Index Scan on idx_region_province_name  (cost=0.00..4.40 rows=16 width=0) (actual time=0.030..0.030 rows=353 loops=1)
                                             Index Cond: ((province)::text = 'ON'::text)
                                             Buffers: shared read=4
                     ->  Index Scan using idx_housing_year_property on housing_price hp  (cost=0.29..7.11 rows=1 width=16) (actual time=0.001..0.001 rows=0 loops=60)
                           Index Cond: ((year = 2020) AND (property_id = p.property_id))
                           Buffers: shared hit=126 read=3
 Planning:
   Buffers: shared hit=304 read=9
 Planning Time: 0.554 ms
 Execution Time: 0.372 ms
(38 rows)

Time: 1.459 ms
== FEATURE 1b EXPLORE INCOME DATA: Average income of ON regions in 2020 (Limit 10) ==
                                                                          QUERY PLAN                                                                          
--------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=33.40..33.42 rows=1 width=76) (actual time=0.067..0.071 rows=7 loops=1)
   Buffers: shared hit=70 read=1
   ->  GroupAggregate  (cost=33.40..33.42 rows=1 width=76) (actual time=0.066..0.070 rows=7 loops=1)
         Group Key: r.name
         Buffers: shared hit=70 read=1
         ->  Sort  (cost=33.40..33.40 rows=1 width=76) (actual time=0.064..0.065 rows=7 loops=1)
               Sort Key: r.name
               Sort Method: quicksort  Memory: 25kB
               Buffers: shared hit=70 read=1
               ->  Nested Loop  (cost=4.46..33.39 rows=1 width=76) (actual time=0.029..0.058 rows=7 loops=1)
                     Buffers: shared hit=70 read=1
                     ->  Bitmap Heap Scan on income_data i  (cost=4.17..8.42 rows=3 width=16) (actual time=0.013..0.018 rows=22 loops=1)
                           Recheck Cond: (year = 2020)
                           Heap Blocks: exact=4
                           Buffers: shared hit=4 read=1
                           ->  Bitmap Index Scan on idx_income_year  (cost=0.00..4.17 rows=3 width=0) (actual time=0.009..0.009 rows=22 loops=1)
                                 Index Cond: (year = 2020)
                                 Buffers: shared read=1
                     ->  Memoize  (cost=0.29..8.31 rows=1 width=68) (actual time=0.002..0.002 rows=0 loops=22)
                           Cache Key: i.region_id
                           Cache Mode: logical
                           Hits: 0  Misses: 22  Evictions: 0  Overflows: 0  Memory Usage: 2kB
                           Buffers: shared hit=66
                           ->  Index Scan using ix_region_region_id on region r  (cost=0.28..8.30 rows=1 width=68) (actual time=0.001..0.001 rows=0 loops=22)
                                 Index Cond: (region_id = i.region_id)
                                 Filter: ((province)::text = 'ON'::text)
                                 Rows Removed by Filter: 1
                                 Buffers: shared hit=66
 Planning:
   Buffers: shared hit=73 read=1
 Planning Time: 0.219 ms
 Execution Time: 0.090 ms
(32 rows)

Time: 0.511 ms
FEATURE 2: Top 5 regions where $145,000 income yields HAI ≥ 25% for 2020 condos (Limit 10)
                                                                            QUERY PLAN                                                                            
------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=118.59..118.59 rows=1 width=64) (actual time=0.594..0.600 rows=10 loops=1)
   Buffers: shared hit=196
   ->  Sort  (cost=118.59..118.59 rows=1 width=64) (actual time=0.594..0.599 rows=10 loops=1)
         Sort Key: (round(((('145000'::double precision / hp.avg_price) * '100'::double precision))::numeric, 2)) DESC
         Sort Method: top-N heapsort  Memory: 26kB
         Buffers: shared hit=196
         ->  Nested Loop  (cost=35.78..118.58 rows=1 width=64) (actual time=0.121..0.585 rows=28 loops=1)
               Buffers: shared hit=193
               ->  Hash Join  (cost=35.50..113.26 rows=1 width=12) (actual time=0.116..0.529 rows=28 loops=1)
                     Hash Cond: (hp.property_id = p.property_id)
                     Buffers: shared hit=109
                     ->  Bitmap Heap Scan on housing_price hp  (cost=4.74..82.46 rows=20 width=12) (actual time=0.026..0.415 rows=303 loops=1)
                           Recheck Cond: (year = 2020)
                           Filter: (round(((('145000'::double precision / avg_price) * '100'::double precision))::numeric, 2) >= '25'::numeric)
                           Rows Removed by Filter: 153
                           Heap Blocks: exact=77
                           Buffers: shared hit=80
                           ->  Bitmap Index Scan on idx_housing_year_property  (cost=0.00..4.74 rows=60 width=0) (actual time=0.016..0.016 rows=456 loops=1)
                                 Index Cond: (year = 2020)
                                 Buffers: shared hit=3
                     ->  Hash  (cost=30.51..30.51 rows=20 width=8) (actual time=0.087..0.091 rows=298 loops=1)
                           Buckets: 1024  Batches: 1  Memory Usage: 20kB
                           Buffers: shared hit=29
                           ->  Bitmap Heap Scan on property p  (cost=4.44..30.51 rows=20 width=8) (actual time=0.017..0.063 rows=298 loops=1)
                                 Recheck Cond: ((type)::text = 'Condo'::text)
                                 Heap Blocks: exact=26
                                 Buffers: shared hit=29
                                 ->  Bitmap Index Scan on idx_property_type_region  (cost=0.00..4.43 rows=20 width=0) (actual time=0.013..0.013 rows=298 loops=1)
                                       Index Cond: ((type)::text = 'Condo'::text)
                                       Buffers: shared hit=3
               ->  Index Scan using ix_region_region_id on region r  (cost=0.28..5.30 rows=1 width=36) (actual time=0.001..0.001 rows=1 loops=28)
                     Index Cond: (region_id = p.region_id)
                     Buffers: shared hit=84
 Planning:
   Buffers: shared hit=10
 Planning Time: 0.141 ms
 Execution Time: 0.612 ms
(37 rows)

Time: 1.131 ms
FEATURE 3: Reverse Lookup – Where Did This Price Exist? (±$25,000 around 600000) (Limit 10)
                                                                               QUERY PLAN                                                                               
------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=0.85..6.56 rows=10 width=76) (actual time=0.025..0.059 rows=10 loops=1)
   Buffers: shared hit=126
   ->  Nested Loop  (cost=0.85..2293.80 rows=4014 width=76) (actual time=0.025..0.058 rows=10 loops=1)
         Buffers: shared hit=126
         ->  Merge Join  (cost=0.57..972.19 rows=4014 width=48) (actual time=0.023..0.049 rows=10 loops=1)
               Merge Cond: (hp.property_id = p.property_id)
               Buffers: shared hit=96
               ->  Index Scan using ix_housing_price_property_id on housing_price hp  (cost=0.29..695.21 rows=4014 width=16) (actual time=0.011..0.029 rows=10 loops=1)
                     Filter: (abs((avg_price - '600000'::double precision)) <= '25000'::double precision)
                     Rows Removed by Filter: 142
                     Buffers: shared hit=93
               ->  Index Scan using ix_property_property_id on property p  (cost=0.28..216.73 rows=4030 width=40) (actual time=0.005..0.012 rows=89 loops=1)
                     Buffers: shared hit=3
         ->  Index Scan using ix_region_region_id on region r  (cost=0.28..0.33 rows=1 width=36) (actual time=0.001..0.001 rows=1 loops=10)
               Index Cond: (region_id = p.region_id)
               Buffers: shared hit=30
 Planning Time: 0.097 ms
 Execution Time: 0.069 ms
(18 rows)

Time: 0.409 ms
FEATURE 4: Top 5 HAI rankings for all regions in 2020 condos (Limit 10)
                                                                                QUERY PLAN                                                                                 
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=41.80..41.81 rows=1 width=76) (actual time=0.200..0.202 rows=4 loops=1)
   Buffers: shared hit=163 read=10
   ->  Sort  (cost=41.80..41.81 rows=1 width=76) (actual time=0.200..0.201 rows=4 loops=1)
         Sort Key: (round((((i.avg_income / avg(h.avg_price)) * '100'::double precision))::numeric, 2)) DESC
         Sort Method: quicksort  Memory: 25kB
         Buffers: shared hit=163 read=10
         ->  GroupAggregate  (cost=41.76..41.79 rows=1 width=76) (actual time=0.194..0.198 rows=4 loops=1)
               Group Key: r.region_id, i.avg_income
               Buffers: shared hit=163 read=10
               ->  Sort  (cost=41.76..41.76 rows=1 width=52) (actual time=0.187..0.188 rows=4 loops=1)
                     Sort Key: r.region_id, i.avg_income
                     Sort Method: quicksort  Memory: 25kB
                     Buffers: shared hit=163 read=10
                     ->  Nested Loop  (cost=5.02..41.75 rows=1 width=52) (actual time=0.069..0.184 rows=4 loops=1)
                           Buffers: shared hit=163 read=10
                           ->  Nested Loop  (cost=4.73..34.42 rows=1 width=52) (actual time=0.052..0.163 rows=18 loops=1)
                                 Buffers: shared hit=123 read=10
                                 ->  Nested Loop  (cost=4.45..33.31 rows=3 width=52) (actual time=0.013..0.042 rows=22 loops=1)
                                       Buffers: shared hit=71
                                       ->  Bitmap Heap Scan on income_data i  (cost=4.17..8.42 rows=3 width=16) (actual time=0.007..0.012 rows=22 loops=1)
                                             Recheck Cond: (year = 2020)
                                             Heap Blocks: exact=4
                                             Buffers: shared hit=5
                                             ->  Bitmap Index Scan on idx_income_year  (cost=0.00..4.17 rows=3 width=0) (actual time=0.005..0.005 rows=22 loops=1)
                                                   Index Cond: (year = 2020)
                                                   Buffers: shared hit=1
                                       ->  Index Scan using ix_region_region_id on region r  (cost=0.28..8.30 rows=1 width=36) (actual time=0.001..0.001 rows=1 loops=22)
                                             Index Cond: (region_id = i.region_id)
                                             Buffers: shared hit=66
                                 ->  Index Scan using idx_property_region_type on property p  (cost=0.28..0.36 rows=1 width=8) (actual time=0.005..0.005 rows=1 loops=22)
                                       Index Cond: ((region_id = r.region_id) AND ((type)::text = 'Condo'::text))
                                       Buffers: shared hit=52 read=10
                           ->  Index Scan using idx_housing_year_property on housing_price h  (cost=0.29..7.11 rows=1 width=16) (actual time=0.001..0.001 rows=0 loops=18)
                                 Index Cond: ((year = 2020) AND (property_id = p.property_id))
                                 Buffers: shared hit=40
 Planning:
   Buffers: shared hit=8
 Planning Time: 0.302 ms
 Execution Time: 0.227 ms
(39 rows)

Time: 0.748 ms
FEATURE 5: Data Gap Finder - Regions with housing data but no income data for 2019 condos
                                                                                     QUERY PLAN                                                                                     
------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 HashSetOp Except  (cost=117.94..151.34 rows=1 width=40) (actual time=0.418..0.423 rows=56 loops=1)
   Buffers: shared hit=356 read=1
   ->  Append  (cost=117.94..151.32 rows=4 width=40) (actual time=0.350..0.405 rows=81 loops=1)
         Buffers: shared hit=356 read=1
         ->  Subquery Scan on "*SELECT* 1"  (cost=117.94..117.96 rows=1 width=40) (actual time=0.350..0.367 rows=59 loops=1)
               Buffers: shared hit=285 read=1
               ->  Unique  (cost=117.94..117.95 rows=1 width=36) (actual time=0.349..0.361 rows=59 loops=1)
                     Buffers: shared hit=285 read=1
                     ->  Sort  (cost=117.94..117.95 rows=1 width=36) (actual time=0.348..0.352 rows=59 loops=1)
                           Sort Key: r.region_id, r.name
                           Sort Method: quicksort  Memory: 26kB
                           Buffers: shared hit=285 read=1
                           ->  Nested Loop  (cost=35.79..117.93 rows=1 width=36) (actual time=0.157..0.337 rows=59 loops=1)
                                 Buffers: shared hit=285 read=1
                                 ->  Hash Join  (cost=35.51..112.63 rows=1 width=4) (actual time=0.153..0.282 rows=59 loops=1)
                                       Hash Cond: (hp.property_id = p.property_id)
                                       Buffers: shared hit=108 read=1
                                       ->  Bitmap Heap Scan on housing_price hp  (cost=4.75..81.72 rows=60 width=4) (actual time=0.039..0.136 rows=456 loops=1)
                                             Recheck Cond: (year = 2019)
                                             Heap Blocks: exact=77
                                             Buffers: shared hit=79 read=1
                                             ->  Bitmap Index Scan on idx_housing_year_property  (cost=0.00..4.74 rows=60 width=0) (actual time=0.033..0.033 rows=456 loops=1)
                                                   Index Cond: (year = 2019)
                                                   Buffers: shared hit=2 read=1
                                       ->  Hash  (cost=30.51..30.51 rows=20 width=8) (actual time=0.110..0.110 rows=298 loops=1)
                                             Buckets: 1024  Batches: 1  Memory Usage: 20kB
                                             Buffers: shared hit=29
                                             ->  Bitmap Heap Scan on property p  (cost=4.44..30.51 rows=20 width=8) (actual time=0.017..0.070 rows=298 loops=1)
                                                   Recheck Cond: ((type)::text = 'Condo'::text)
                                                   Heap Blocks: exact=26
                                                   Buffers: shared hit=29
                                                   ->  Bitmap Index Scan on idx_property_type_region  (cost=0.00..4.43 rows=20 width=0) (actual time=0.012..0.012 rows=298 loops=1)
                                                         Index Cond: ((type)::text = 'Condo'::text)
                                                         Buffers: shared hit=3
                                 ->  Index Scan using ix_region_region_id on region r  (cost=0.28..5.30 rows=1 width=36) (actual time=0.001..0.001 rows=1 loops=59)
                                       Index Cond: (region_id = p.region_id)
                                       Buffers: shared hit=177
         ->  Subquery Scan on "*SELECT* 2"  (cost=4.45..33.34 rows=3 width=40) (actual time=0.008..0.030 rows=22 loops=1)
               Buffers: shared hit=71
               ->  Nested Loop  (cost=4.45..33.31 rows=3 width=36) (actual time=0.007..0.028 rows=22 loops=1)
                     Buffers: shared hit=71
                     ->  Bitmap Heap Scan on income_data i  (cost=4.17..8.42 rows=3 width=4) (actual time=0.005..0.008 rows=22 loops=1)
                           Recheck Cond: (year = 2019)
                           Heap Blocks: exact=4
                           Buffers: shared hit=5
                           ->  Bitmap Index Scan on idx_income_year  (cost=0.00..4.17 rows=3 width=0) (actual time=0.002..0.002 rows=22 loops=1)
                                 Index Cond: (year = 2019)
                                 Buffers: shared hit=1
                     ->  Index Scan using ix_region_region_id on region r_1  (cost=0.28..8.30 rows=1 width=36) (actual time=0.001..0.001 rows=1 loops=22)
                           Index Cond: (region_id = i.region_id)
                           Buffers: shared hit=66
 Planning Time: 0.139 ms
 Execution Time: 0.448 ms
(53 rows)

Time: 0.784 ms
