== Enabling psql timing ==
Timing is on.
== FEATURE 1a EXPLORE HOUSING PRICES: Average price of ON condos in 2020 by region (Limit 10)==
                                                                         QUERY PLAN                                                                          
-------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=103.96..103.98 rows=1 width=108) (actual time=0.680..0.685 rows=9 loops=1)
   Buffers: shared hit=179
   ->  GroupAggregate  (cost=103.96..103.98 rows=1 width=108) (actual time=0.678..0.683 rows=9 loops=1)
         Group Key: r.name
         Buffers: shared hit=179
         ->  Sort  (cost=103.96..103.97 rows=1 width=108) (actual time=0.674..0.676 rows=9 loops=1)
               Sort Key: r.name
               Sort Method: quicksort  Memory: 25kB
               Buffers: shared hit=179
               ->  Nested Loop  (cost=43.71..103.95 rows=1 width=108) (actual time=0.519..0.635 rows=9 loops=1)
                     Buffers: shared hit=176
                     ->  Hash Join  (cost=43.42..95.78 rows=1 width=100) (actual time=0.360..0.521 rows=60 loops=1)
                           Hash Cond: (p.region_id = r.region_id)
                           Buffers: shared hit=47
                           ->  Seq Scan on property p  (cost=0.00..52.33 rows=11 width=40) (actual time=0.009..0.222 rows=298 loops=1)
                                 Filter: ((type)::text = 'Condo'::text)
                                 Rows Removed by Filter: 3732
                                 Buffers: shared hit=26
                           ->  Hash  (cost=43.31..43.31 rows=9 width=68) (actual time=0.264..0.264 rows=353 loops=1)
                                 Buckets: 1024  Batches: 1  Memory Usage: 26kB
                                 Buffers: shared hit=21
                                 ->  Seq Scan on region r  (cost=0.00..43.31 rows=9 width=68) (actual time=0.035..0.221 rows=353 loops=1)
                                       Filter: ((province)::text = 'ON'::text)
                                       Rows Removed by Filter: 2914
                                       Buffers: shared hit=21
                     ->  Index Scan using uq_property_year on housing_price hp  (cost=0.29..7.94 rows=1 width=16) (actual time=0.002..0.002 rows=0 loops=60)
                           Index Cond: ((property_id = p.property_id) AND (year = 2020))
                           Buffers: shared hit=129
 Planning:
   Buffers: shared hit=236
 Planning Time: 1.168 ms
 Execution Time: 0.743 ms
(32 rows)

Time: 3.884 ms
== FEATURE 1b EXPLORE INCOME DATA: Average income of ON regions in 2020 (Limit 10) ==
                                                               QUERY PLAN                                                               
----------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=74.70..74.72 rows=1 width=76) (actual time=0.237..0.240 rows=7 loops=1)
   Buffers: shared hit=25
   ->  GroupAggregate  (cost=74.70..74.72 rows=1 width=76) (actual time=0.237..0.239 rows=7 loops=1)
         Group Key: r.name
         Buffers: shared hit=25
         ->  Sort  (cost=74.70..74.70 rows=1 width=76) (actual time=0.233..0.233 rows=7 loops=1)
               Sort Key: r.name
               Sort Method: quicksort  Memory: 25kB
               Buffers: shared hit=25
               ->  Hash Join  (cost=31.35..74.69 rows=1 width=76) (actual time=0.093..0.229 rows=7 loops=1)
                     Hash Cond: (r.region_id = i.region_id)
                     Buffers: shared hit=25
                     ->  Seq Scan on region r  (cost=0.00..43.31 rows=9 width=68) (actual time=0.024..0.173 rows=353 loops=1)
                           Filter: ((province)::text = 'ON'::text)
                           Rows Removed by Filter: 2914
                           Buffers: shared hit=21
                     ->  Hash  (cost=31.25..31.25 rows=8 width=16) (actual time=0.034..0.034 rows=22 loops=1)
                           Buckets: 1024  Batches: 1  Memory Usage: 10kB
                           Buffers: shared hit=4
                           ->  Seq Scan on income_data i  (cost=0.00..31.25 rows=8 width=16) (actual time=0.007..0.031 rows=22 loops=1)
                                 Filter: (year = 2020)
                                 Rows Removed by Filter: 528
                                 Buffers: shared hit=4
 Planning:
   Buffers: shared hit=69
 Planning Time: 0.153 ms
 Execution Time: 0.255 ms
(27 rows)

Time: 0.601 ms
FEATURE 2: Top 5 regions where $145,000 income yields HAI ≥ 25% for 2020 condos (Limit 10)
                                                                          QUERY PLAN                                                                          
--------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=146.99..146.99 rows=1 width=64) (actual time=0.634..0.636 rows=10 loops=1)
   Buffers: shared hit=756
   ->  Sort  (cost=146.99..146.99 rows=1 width=64) (actual time=0.633..0.635 rows=10 loops=1)
         Sort Key: (round(((('145000'::double precision / hp.avg_price) * '100'::double precision))::numeric, 2)) DESC
         Sort Method: top-N heapsort  Memory: 25kB
         Buffers: shared hit=756
         ->  Nested Loop  (cost=0.56..146.98 rows=1 width=64) (actual time=0.042..0.620 rows=28 loops=1)
               Buffers: shared hit=753
               ->  Nested Loop  (cost=0.29..140.48 rows=1 width=12) (actual time=0.037..0.563 rows=28 loops=1)
                     Buffers: shared hit=669
                     ->  Seq Scan on property p  (cost=0.00..52.33 rows=11 width=8) (actual time=0.004..0.196 rows=298 loops=1)
                           Filter: ((type)::text = 'Condo'::text)
                           Rows Removed by Filter: 3732
                           Buffers: shared hit=26
                     ->  Index Scan using uq_property_year on housing_price hp  (cost=0.29..7.95 rows=1 width=12) (actual time=0.001..0.001 rows=0 loops=298)
                           Index Cond: ((property_id = p.property_id) AND (year = 2020))
                           Filter: (round(((('145000'::double precision / avg_price) * '100'::double precision))::numeric, 2) >= '25'::numeric)
                           Rows Removed by Filter: 0
                           Buffers: shared hit=643
               ->  Index Scan using ix_region_region_id on region r  (cost=0.28..6.48 rows=1 width=36) (actual time=0.001..0.001 rows=1 loops=28)
                     Index Cond: (region_id = p.region_id)
                     Buffers: shared hit=84
 Planning:
   Buffers: shared hit=10
 Planning Time: 0.152 ms
 Execution Time: 0.649 ms
(26 rows)

Time: 1.283 ms
FEATURE 3: Reverse Lookup – Where Did This Price Exist? (±$25,000 around 600000) (Limit 10)
                                                                            QUERY PLAN                                                                            
------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=0.84..4.77 rows=10 width=76) (actual time=0.072..0.147 rows=10 loops=1)
   Buffers: shared hit=363
   ->  Merge Join  (cost=0.84..1715.67 rows=4363 width=76) (actual time=0.072..0.145 rows=10 loops=1)
         Merge Cond: (p.property_id = hp.property_id)
         Buffers: shared hit=363
         ->  Nested Loop  (cost=0.56..937.06 rows=2106 width=68) (actual time=0.009..0.085 rows=89 loops=1)
               Buffers: shared hit=270
               ->  Index Scan using ix_property_property_id on property p  (cost=0.28..187.87 rows=2106 width=40) (actual time=0.006..0.021 rows=89 loops=1)
                     Buffers: shared hit=3
               ->  Index Scan using ix_region_region_id on region r  (cost=0.28..0.36 rows=1 width=36) (actual time=0.000..0.000 rows=1 loops=89)
                     Index Cond: (region_id = p.region_id)
                     Buffers: shared hit=267
         ->  Index Scan using ix_housing_price_property_id on housing_price hp  (cost=0.29..718.81 rows=4363 width=16) (actual time=0.022..0.053 rows=10 loops=1)
               Filter: (abs((avg_price - '600000'::double precision)) <= '25000'::double precision)
               Rows Removed by Filter: 142
               Buffers: shared hit=93
 Planning Time: 0.113 ms
 Execution Time: 0.169 ms
(18 rows)

Time: 0.603 ms
FEATURE 4: Top 5 HAI rankings for all regions in 2020 condos (Limit 10)
                                                                             QUERY PLAN                                                                             
--------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=98.78..98.79 rows=1 width=76) (actual time=0.376..0.378 rows=4 loops=1)
   Buffers: shared hit=127
   ->  Sort  (cost=98.78..98.79 rows=1 width=76) (actual time=0.376..0.377 rows=4 loops=1)
         Sort Key: (round((((i.avg_income / avg(h.avg_price)) * '100'::double precision))::numeric, 2)) DESC
         Sort Method: quicksort  Memory: 25kB
         Buffers: shared hit=127
         ->  GroupAggregate  (cost=91.56..98.77 rows=1 width=76) (actual time=0.368..0.372 rows=4 loops=1)
               Group Key: r.region_id, i.avg_income
               Buffers: shared hit=127
               ->  Incremental Sort  (cost=91.56..98.74 rows=2 width=52) (actual time=0.359..0.360 rows=4 loops=1)
                     Sort Key: r.region_id, i.avg_income
                     Presorted Key: r.region_id
                     Full-sort Groups: 1  Sort Method: quicksort  Average Memory: 25kB  Peak Memory: 25kB
                     Buffers: shared hit=127
                     ->  Nested Loop  (cost=84.45..98.65 rows=1 width=52) (actual time=0.266..0.319 rows=4 loops=1)
                           Buffers: shared hit=124
                           ->  Nested Loop  (cost=84.16..90.47 rows=1 width=52) (actual time=0.260..0.302 rows=18 loops=1)
                                 Buffers: shared hit=84
                                 ->  Merge Join  (cost=83.89..83.99 rows=1 width=24) (actual time=0.252..0.280 rows=18 loops=1)
                                       Merge Cond: (p.region_id = i.region_id)
                                       Buffers: shared hit=30
                                       ->  Sort  (cost=52.52..52.54 rows=11 width=8) (actual time=0.214..0.227 rows=274 loops=1)
                                             Sort Key: p.region_id
                                             Sort Method: quicksort  Memory: 31kB
                                             Buffers: shared hit=26
                                             ->  Seq Scan on property p  (cost=0.00..52.33 rows=11 width=8) (actual time=0.004..0.179 rows=298 loops=1)
                                                   Filter: ((type)::text = 'Condo'::text)
                                                   Rows Removed by Filter: 3732
                                                   Buffers: shared hit=26
                                       ->  Sort  (cost=31.37..31.39 rows=8 width=16) (actual time=0.034..0.036 rows=22 loops=1)
                                             Sort Key: i.region_id
                                             Sort Method: quicksort  Memory: 25kB
                                             Buffers: shared hit=4
                                             ->  Seq Scan on income_data i  (cost=0.00..31.25 rows=8 width=16) (actual time=0.006..0.027 rows=22 loops=1)
                                                   Filter: (year = 2020)
                                                   Rows Removed by Filter: 528
                                                   Buffers: shared hit=4
                                 ->  Index Scan using ix_region_region_id on region r  (cost=0.28..6.48 rows=1 width=36) (actual time=0.001..0.001 rows=1 loops=18)
                                       Index Cond: (region_id = p.region_id)
                                       Buffers: shared hit=54
                           ->  Index Scan using uq_property_year on housing_price h  (cost=0.29..7.94 rows=1 width=16) (actual time=0.001..0.001 rows=0 loops=18)
                                 Index Cond: ((property_id = p.property_id) AND (year = 2020))
                                 Buffers: shared hit=40
 Planning:
   Buffers: shared hit=14
 Planning Time: 0.246 ms
 Execution Time: 0.437 ms
(47 rows)

Time: 0.947 ms
FEATURE 5: Data Gap Finder - Regions with housing data but no income data for 2019 condos
                                                                                     QUERY PLAN                                                                                     
------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 HashSetOp Except  (cost=146.41..221.49 rows=1 width=40) (actual time=1.107..1.114 rows=56 loops=1)
   Buffers: shared hit=883
   ->  Append  (cost=146.41..221.45 rows=9 width=40) (actual time=0.629..1.080 rows=81 loops=1)
         Buffers: shared hit=883
         ->  Subquery Scan on "*SELECT* 1"  (cost=146.41..146.43 rows=1 width=40) (actual time=0.628..0.655 rows=59 loops=1)
               Buffers: shared hit=858
               ->  Unique  (cost=146.41..146.42 rows=1 width=36) (actual time=0.628..0.638 rows=59 loops=1)
                     Buffers: shared hit=858
                     ->  Sort  (cost=146.41..146.41 rows=1 width=36) (actual time=0.627..0.631 rows=59 loops=1)
                           Sort Key: r.region_id, r.name
                           Sort Method: quicksort  Memory: 26kB
                           Buffers: shared hit=858
                           ->  Nested Loop  (cost=0.56..146.40 rows=1 width=36) (actual time=0.058..0.617 rows=59 loops=1)
                                 Buffers: shared hit=858
                                 ->  Nested Loop  (cost=0.29..139.91 rows=1 width=4) (actual time=0.055..0.540 rows=59 loops=1)
                                       Buffers: shared hit=681
                                       ->  Seq Scan on property p  (cost=0.00..52.33 rows=11 width=8) (actual time=0.006..0.207 rows=298 loops=1)
                                             Filter: ((type)::text = 'Condo'::text)
                                             Rows Removed by Filter: 3732
                                             Buffers: shared hit=26
                                       ->  Index Only Scan using uq_property_year on housing_price hp  (cost=0.29..7.94 rows=1 width=4) (actual time=0.001..0.001 rows=0 loops=298)
                                             Index Cond: ((property_id = p.property_id) AND (year = 2019))
                                             Heap Fetches: 59
                                             Buffers: shared hit=655
                                 ->  Index Scan using ix_region_region_id on region r  (cost=0.28..6.48 rows=1 width=36) (actual time=0.001..0.001 rows=1 loops=59)
                                       Index Cond: (region_id = p.region_id)
                                       Buffers: shared hit=177
         ->  Subquery Scan on "*SELECT* 2"  (cost=31.35..74.98 rows=8 width=40) (actual time=0.034..0.418 rows=22 loops=1)
               Buffers: shared hit=25
               ->  Hash Join  (cost=31.35..74.90 rows=8 width=36) (actual time=0.034..0.416 rows=22 loops=1)
                     Hash Cond: (r_1.region_id = i.region_id)
                     Buffers: shared hit=25
                     ->  Seq Scan on region r_1  (cost=0.00..38.85 rows=1785 width=36) (actual time=0.003..0.227 rows=3267 loops=1)
                           Buffers: shared hit=21
                     ->  Hash  (cost=31.25..31.25 rows=8 width=4) (actual time=0.028..0.028 rows=22 loops=1)
                           Buckets: 1024  Batches: 1  Memory Usage: 9kB
                           Buffers: shared hit=4
                           ->  Seq Scan on income_data i  (cost=0.00..31.25 rows=8 width=4) (actual time=0.004..0.025 rows=22 loops=1)
                                 Filter: (year = 2019)
                                 Rows Removed by Filter: 528
                                 Buffers: shared hit=4
 Planning Time: 0.133 ms
 Execution Time: 1.140 ms
(43 rows)

Time: 1.450 ms
